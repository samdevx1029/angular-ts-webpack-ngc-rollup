/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/render/api';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/linker/element';
import * as import3 from '../../../../app/shared/header/header.component';
import * as import4 from '@angular/core/src/linker/view_utils';
import * as import5 from '@angular/core/src/di/injector';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/change_detection';
import * as import8 from '@angular/core/src/metadata/view';
import * as import9 from '@angular/core/src/linker/component_factory';
import * as import10 from '@angular/router/src/directives/router_outlet';
import * as import11 from '@angular/router/src/router_outlet_map';
import * as import12 from '@angular/core/src/linker/component_factory_resolver';
var renderType_HeaderComponent_Host:import0.RenderComponentType = (null as any);
class _View_HeaderComponent_Host0 extends import1.AppView<any> {
  _el_0:any;
  /*private*/ _appEl_0:import2.AppElement;
  _HeaderComponent_0_4:import3.HeaderComponent;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_HeaderComponent_Host0,renderType_HeaderComponent_Host,import6.ViewType.HOST,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import2.AppElement {
    this._el_0 = this.selectOrCreateHostElement('hpt-header',rootSelector,(null as any));
    this._appEl_0 = new import2.AppElement(0,(null as any),this,this._el_0);
    var compView_0:any = viewFactory_HeaderComponent0(this.viewUtils,this.injector(0),this._appEl_0);
    this._HeaderComponent_0_4 = new import3.HeaderComponent();
    this._appEl_0.initComponent(this._HeaderComponent_0_4,[],compView_0);
    compView_0.create(this._HeaderComponent_0_4,this.projectableNodes,(null as any));
    this.init([].concat([this._el_0]),[this._el_0],[],[]);
    return this._appEl_0;
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import3.HeaderComponent) && (0 === requestNodeIndex))) { return this._HeaderComponent_0_4; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    if (((this.numberOfChecks === 0) && !throwOnChange)) { this._HeaderComponent_0_4.ngOnInit(); }
    this.detectContentChildrenChanges(throwOnChange);
    this.detectViewChildrenChanges(throwOnChange);
  }
}
function viewFactory_HeaderComponent_Host0(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<any> {
  if ((renderType_HeaderComponent_Host === (null as any))) { (renderType_HeaderComponent_Host = viewUtils.createRenderComponentType('',0,import8.ViewEncapsulation.None,[],{})); }
  return new _View_HeaderComponent_Host0(viewUtils,parentInjector,declarationEl);
}
export const HeaderComponentNgFactory:import9.ComponentFactory<import3.HeaderComponent> = new import9.ComponentFactory<import3.HeaderComponent>('hpt-header',viewFactory_HeaderComponent_Host0,import3.HeaderComponent);
const styles_HeaderComponent:any[] = [];
var renderType_HeaderComponent:import0.RenderComponentType = (null as any);
class _View_HeaderComponent0 extends import1.AppView<import3.HeaderComponent> {
  _el_0:any;
  _el_1:any;
  /*private*/ _appEl_1:import2.AppElement;
  _RouterOutlet_1_5:import10.RouterOutlet;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_HeaderComponent0,renderType_HeaderComponent,import6.ViewType.COMPONENT,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import2.AppElement {
    const parentRenderNode:any = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
    this._el_0 = this.renderer.createElement(parentRenderNode,'div',(null as any));
    this._el_1 = this.renderer.createElement(parentRenderNode,'router-outlet',(null as any));
    this._appEl_1 = new import2.AppElement(1,(null as any),this,this._el_1);
    this._RouterOutlet_1_5 = new import10.RouterOutlet(this.parentInjector.get(import11.RouterOutletMap),this._appEl_1.vcRef,this.parentInjector.get(import12.ComponentFactoryResolver),(null as any));
    this.init([],[
      this._el_0,
      this._el_1
    ]
    ,[],[]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import10.RouterOutlet) && (1 === requestNodeIndex))) { return this._RouterOutlet_1_5; }
    return notFoundResult;
  }
  destroyInternal():void {
    this._RouterOutlet_1_5.ngOnDestroy();
  }
}
export function viewFactory_HeaderComponent0(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<import3.HeaderComponent> {
  if ((renderType_HeaderComponent === (null as any))) { (renderType_HeaderComponent = viewUtils.createRenderComponentType('c:/Users/sshrestha/Source/Repos/Hamilton Plate Tracker Spa/src/app/shared/header/header.component.ts class HeaderComponent - inline template',0,import8.ViewEncapsulation.None,styles_HeaderComponent,{})); }
  return new _View_HeaderComponent0(viewUtils,parentInjector,declarationEl);
}